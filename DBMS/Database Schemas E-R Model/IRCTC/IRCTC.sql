-- MySQL Script generated by MySQL Workbench
-- Thursday 21 September 2017 04:44:31 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- Primary Keys, Strong and Weak Entities mentioned in COMMENT after CREATE TABLES. 

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Train`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Train` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Train` (
  `Train_ID` INT NOT NULL AUTO_INCREMENT,
  `Train_name` VARCHAR(45) NOT NULL,
  `Starting_station` VARCHAR(45) NOT NULL,
  `Destination_station` VARCHAR(45) NOT NULL,
  `Departure_date_time` DATETIME NOT NULL,
  `Arrival_date_time` DATETIME NOT NULL,
  PRIMARY KEY (`Train_ID`))
ENGINE = InnoDB
COMMENT = 'Strong Entity.\nPrimary Key - Train_ID ';


-- -----------------------------------------------------
-- Table `mydb`.`Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Customer` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Customer` (
  `Customer_ID` INT NOT NULL,
  `Customer_name` VARCHAR(45) NOT NULL,
  `Customer_contact` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Customer_ID`),
  UNIQUE INDEX `Customer_contact_UNIQUE` (`Customer_contact` ASC))
ENGINE = InnoDB
COMMENT = 'Strong Entity.\nPrimary Key - Customer_ID ';


-- -----------------------------------------------------
-- Table `mydb`.`Ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Ticket` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Ticket` (
  `Ticket_ID` INT NOT NULL AUTO_INCREMENT COMMENT 'Partial Key',
  `Customer_ID` INT NOT NULL,
  `Train_ID` INT NULL DEFAULT NULL,
  `Reserved` BIT NOT NULL DEFAULT false,
  `Departure_date_time` DATETIME NOT NULL,
  `Arrival_date_time` DATETIME NOT NULL,
  `Fare` INT NOT NULL,
  PRIMARY KEY (`Ticket_ID`),
  INDEX `fk_Ticket_1_idx` (`Customer_ID` ASC),
  INDEX `fk_Ticket_2_idx` (`Train_ID` ASC),
  CONSTRAINT `fk_Ticket_1`
    FOREIGN KEY (`Customer_ID`)
    REFERENCES `mydb`.`Customer` (`Customer_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ticket_2`
    FOREIGN KEY (`Train_ID`)
    REFERENCES `mydb`.`Train` (`Train_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Weak Entity. \nPrimary Key - {Customer_ID, Train_ID, Departure_date_time}\nPartial Key - Tcket_ID (Used for Indexing purposes as Primary Key)';

USE `mydb`;

DELIMITER $$

USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Ticket_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Ticket_BEFORE_INSERT` BEFORE INSERT ON `Ticket` FOR EACH ROW
BEGIN
	IF NEW.Reserved = true AND NEW.Train_ID = NULL
    THEN SIGNAL SQLSTATE '45000'
                    SET MESSAGE_TEXT = 'Reserved ticket must correspond to a train';
	END IF;
    
    IF NEW.Departure_Date_Time > (SELECT Ticket.Arrival_Date_Time from Ticket WHERE Ticket.Customer_ID = NEW.Customer_ID)
    THEN SIGNAL SQLSTATE '45000'
                    SET MESSAGE_TEXT = 'A customer cannot be in two trains at the same time.';
	END IF;
    
END;$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
