-- MySQL Script generated by MySQL Workbench
-- Thursday 21 September 2017 04:32:53 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- Primary Keys, Strong and Weak Entities mentioned in COMMENT after CREATE TABLES. 

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Customer` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Customer` (
  `Customer_ID` INT NOT NULL AUTO_INCREMENT,
  `Customer_name` VARCHAR(45) NOT NULL,
  `Customer_contact` MEDIUMTEXT NOT NULL,
  `Customer_address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Customer_ID`),
  UNIQUE INDEX `Customer_contact_UNIQUE` (`Customer_contact` ASC))
ENGINE = InnoDB
COMMENT = 'Strong Entity.\nPrimary Key - Customer_ID ';


-- -----------------------------------------------------
-- Table `mydb`.`Driver`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Driver` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Driver` (
  `Driver_ID` INT NOT NULL AUTO_INCREMENT,
  `Driver_name` VARCHAR(45) NOT NULL,
  `Cab_ID` INT NULL,
  `Driver_contact` MEDIUMTEXT NOT NULL,
  `Driver_Address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Driver_ID`),
  INDEX `fk_Driver_1_idx` (`Cab_ID` ASC),
  UNIQUE INDEX `Driver_contact_UNIQUE` (`Driver_contact` ASC),
  CONSTRAINT `fk_Driver_1`
    FOREIGN KEY (`Cab_ID`)
    REFERENCES `mydb`.`Cabs` (`Cab_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Strong Entity.\nPrimary Key - Driver_ID ';


-- -----------------------------------------------------
-- Table `mydb`.`Cabs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Cabs` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Cabs` (
  `Cab_ID` INT NOT NULL AUTO_INCREMENT,
  `Car_company` VARCHAR(45) NOT NULL,
  `Model` VARCHAR(45) NULL,
  `Driver_ID` INT NOT NULL,
  PRIMARY KEY (`Cab_ID`),
  INDEX `fk_Cabs_1_idx` (`Driver_ID` ASC),
  CONSTRAINT `fk_Cabs_1`
    FOREIGN KEY (`Driver_ID`)
    REFERENCES `mydb`.`Driver` (`Driver_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Strong Entity.\nPrimary Key -  Cab_ID ';


-- -----------------------------------------------------
-- Table `mydb`.`Rides`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Rides` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Rides` (
  `Ride_ID` INT NOT NULL AUTO_INCREMENT COMMENT 'Partial Key',
  `Customer_ID` INT NOT NULL,
  `Cab_ID` INT NOT NULL,
  `Driver_ID` INT NOT NULL,
  `From_location` VARCHAR(45) NOT NULL,
  `To` VARCHAR(45) NOT NULL,
  `Pickup_date_time` DATETIME NOT NULL,
  `Drop_date_time` VARCHAR(45) NOT NULL DEFAULT '9999-12-31 23:59:59.999999',
  `Fare` INT NOT NULL,
  PRIMARY KEY (`Ride_ID`),
  INDEX `fk_Rides_1_idx` (`Cab_ID` ASC),
  INDEX `fk_Rides_2_idx` (`Customer_ID` ASC),
  INDEX `fk_Rides_3_idx` (`Driver_ID` ASC),
  CONSTRAINT `fk_Rides_1`
    FOREIGN KEY (`Cab_ID`)
    REFERENCES `mydb`.`Cabs` (`Cab_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rides_2`
    FOREIGN KEY (`Customer_ID`)
    REFERENCES `mydb`.`Customer` (`Customer_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rides_3`
    FOREIGN KEY (`Driver_ID`)
    REFERENCES `mydb`.`Driver` (`Driver_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Weak Entity. \nPrimary Key - {Customer_ID, Cab_ID, Driver_ID}\nPartial Key - Ride_ID (Used for Indexing purposes as Primary Key)';

USE `mydb`;

DELIMITER $$

USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Rides_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Rides_BEFORE_INSERT` BEFORE INSERT ON `Rides` FOR EACH ROW
BEGIN
	IF (NEW.Pickup_date_time > (SELECT Rides.Arrival_Date_Time 
								FROM Rides 
                                WHERE Rides.Customer_ID = NEW.Customer_ID))
    THEN SIGNAL SQLSTATE '45000';
		 SET MESSAGE_TEXT = 'A customer cannot be in more than one Cabs at the same time.';
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
